<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming Languages on GK&#39;s Blog</title>
    <link>/categories/programming-languages/</link>
    <description>Recent content in Programming Languages on GK&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 07 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/programming-languages/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>C&#43;&#43; Lambdas and Recursion</title>
      <link>/post/2018/09/07/c---lambdas-and-recursion/</link>
      <pubDate>Fri, 07 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018/09/07/c---lambdas-and-recursion/</guid>
      <description>Let me say I want to reverse a sequence of elements. First I&amp;rsquo;ve to define a function.
One definition:
int main (void) { // sequence 	void reverse (vector&amp;lt;int&amp;gt; &amp;amp;arr) { int i = 0, j = arr.size() - 1; while (i &amp;lt; j) { int temp = arr[i]; arr[i++] = arr[j]; arr[j--] = temp; } } // calls reverse 	return 0; } But you can&amp;rsquo;t do that in C++.</description>
    </item>
    
    <item>
      <title>Why Scala Implicits</title>
      <link>/post/2018/06/20/why-scala-implicits/</link>
      <pubDate>Wed, 20 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018/06/20/why-scala-implicits/</guid>
      <description>There&amp;rsquo;s a huge debate on Scala Implicits since they&amp;rsquo;ve introduced it to the language. Some people love it while some people comment it on making the code unpredictable. So should we use it?
Before I tell you what implicits actually are, I&amp;rsquo;ll tell you what they solve.
If you have to store the details of a Person&amp;rsquo;s name and age, there are two ways to do it.
class Person(name: String, age: Int) While this does the work we need, it&amp;rsquo;s not the right way to do it.</description>
    </item>
    
    <item>
      <title>Using JavaScript packages that doesn&#39;t have types</title>
      <link>/post/2018/05/28/using-javascript-packages-that-doesnt-have-types/</link>
      <pubDate>Mon, 28 May 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018/05/28/using-javascript-packages-that-doesnt-have-types/</guid>
      <description>I write JavaScript, your write JavaScript, everyone writes JavaScript. I write TypeScript, but you may not write TypeScript.
&amp;ldquo;Oh!! Who cares?&amp;rdquo; &amp;ldquo;We do.&amp;rdquo;
&amp;ldquo;If that&amp;rsquo;s the case, use an alternate library, you know, each second, a shit JS library is born OUTTA NOWHERE.&amp;rdquo; &amp;ldquo;But I need your types.&amp;rdquo;
JavaScript has too many packages that it even has two Google Maps Library(React). But only one of the library has Type Definitions. It&amp;rsquo;s a pain to write your own definition file.</description>
    </item>
    
  </channel>
</rss>